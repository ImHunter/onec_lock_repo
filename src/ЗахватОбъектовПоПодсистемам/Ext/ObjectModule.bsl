#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс   

Процедура ЗаписатьНастройки() Экспорт 
	
	СохраняемыеНастройки = СохраняемыеНастройки();
	#Если Сервер И Не Сервер Тогда // Фейк для автокомплита
		СохраняемыеНастройки = Новый Структура;
	#КонецЕсли // Конец фейковой директивы
	КлючОбъектаНастроек = КлючОбъектаНастроек();
	Для Каждого ОписаниеНастройки Из СохраняемыеНастройки Цикл
		ХранилищеОбщихНастроек.Сохранить(КлючОбъектаНастроек, ОписаниеНастройки.Ключ, ЭтотОбъект[ОписаниеНастройки.Ключ]);	
	КонецЦикла;
	
КонецПроцедуры 

Процедура СформироватьСтрокуЗапуска() Экспорт  
	
	ЗаполнитьНастройкиЗахватаОбъектов(); 
	СконструироватьСтрокуЗапуска();
	
КонецПроцедуры

#КонецОбласти  // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ЭтотМетод(ЛокальноеИмяМетода)
	Возврат Метаданные().ПолноеИмя() + "." + ЛокальноеИмяМетода;
КонецФункции 

Процедура ИнициализироватьНастройки()  
	
	СтрокаПодключенияИБ = СтрокаСоединенияИнформационнойБазы(); 
	КлючиНастроек = ХранилищеОбщихНастроек.ПолучитьСписок(КлючОбъектаНастроек());
    #Если Сервер И Не Сервер Тогда // Фейк для автокомплита
		КлючиНастроек = Новый СписокЗначений;
	#КонецЕсли // Конец фейковой директивы
	
	Если ЗначениеЗаполнено(КлючиНастроек) И КлючиНастроек.НайтиПоЗначению("СохранятьНастройки")<>Неопределено Тогда  
		ПрочитатьЗначенияНастроек(КлючиНастроек);
	КонецЕсли;  
	
	Для Каждого ОписаниеРасширения Из РасширенияКонфигурации.Получить() Цикл 
		СписокРасширений.Добавить(ОписаниеРасширения.Имя);
	КонецЦикла;
	
КонецПроцедуры  

Процедура ПрочитатьЗначенияНастроек(КлючиНастроек) 

	#Если Сервер И Не Сервер Тогда // Фейк для автокомплита
		КлючиНастроек = Новый СписокЗначений;		
	#КонецЕсли // Конец фейковой директивы  

	КлючОбъектаНастроек = КлючОбъектаНастроек();
	Для Каждого Ключ Из КлючиНастроек Цикл 
		ЗначениеНастройки = ХранилищеОбщихНастроек.Загрузить(КлючОбъектаНастроек, Ключ);
		ЭтотОбъект[Ключ.Значение] = ЗначениеНастройки;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДеревоПодсистем()  
	
	Если ЗначениеЗаполнено(ДеревоПодсистем.Колонки) Тогда 
		ДеревоПодсистем.Строки.Очистить();
	Иначе 
		ДеревоПодсистем = ПустоеДерево();
	КонецЕсли;
	Подсистемы = Метаданные.Подсистемы;
	
	ЗаполнитьСтрокиДереваПодсистем(ДеревоПодсистем.Строки, Подсистемы);
	
КонецПроцедуры

Процедура ЗаполнитьСтрокиДереваПодсистем(Строки, Подсистемы) 
	
	#Если Сервер И Не Сервер Тогда // Фейк для автокомплита
		Строки = ДеревоПодсистем.Строки;
		Подсистемы = Метаданные.Подсистемы;
	#КонецЕсли // Конец фейковой директивы
	
	Для Каждого ОписаниеПодсистемы Из Подсистемы Цикл 
		УзелДерева = Строки.Добавить();
		УзелДерева.Имя = ОписаниеПодсистемы.Имя;
		УзелДерева.ПолноеИмя = ОписаниеПодсистемы.ПолноеИмя();
		Если ОписаниеПодсистемы.Подсистемы.Количество()<>0 Тогда 
			ЗаполнитьСтрокиДереваПодсистем(УзелДерева.Строки, ОписаниеПодсистемы.Подсистемы);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриИнициализацииОбъекта() 
	ИнициализироватьНастройки();
	ЗаполнитьДеревоПодсистем();
КонецПроцедуры  

Функция ПустоеДерево()
	
	Результат = Новый ДеревоЗначений;
	Результат.Колонки.Добавить("Захват",	Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("РежимЗахвата",	Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("Имя", 		Новый ОписаниеТипов("Строка")); 
	Результат.Колонки.Добавить("ПолноеИмя", Новый ОписаниеТипов("Строка")); 
	
	Возврат Результат;
	
КонецФункции

Функция КлючОбъектаНастроек() 
	Возврат Метаданные().ПолноеИмя() + СтрокаПодключенияИБ;
КонецФункции    

Функция СохраняемыеНастройки()
	
	Результат = Новый Структура();
	Результат.Вставить("СохранятьНастройки");
	Результат.Вставить("ИмяПользователяХранилища");
	Результат.Вставить("ПарольХранилища");
	Результат.Вставить("ПутьКХранилищу");
	Результат.Вставить("ИмяПользователяИБ");
	Результат.Вставить("ПарольИБ");
	Результат.Вставить("ИмяРасширения");
	Результат.Вставить("WindowsАутентификацияИБ");
	
	Возврат Результат;
	
КонецФункции   

Процедура ЗаполнитьНастройкиЗахватаОбъектов()
	
	Запись = Новый ЗаписьXML();
	Запись.УстановитьСтроку();
	
	Запись.ЗаписатьНачалоЭлемента("Objects");
	Запись.ЗаписатьАтрибут("xmlns", "http://v8.1c.ru/8.3/config/objects");
	Запись.ЗаписатьАтрибут("version", "1.0");
	
	Если ЗахватитьКорень Тогда
		Запись.ЗаписатьНачалоЭлемента("Configuration");
		Запись.ЗаписатьАтрибут("includeChildObjects", "false");
		Запись.ЗаписатьКонецЭлемента(); // Configuration
	КонецЕсли; 
	
	УзлыЗахватываемыхПодсистем = Новый Массив;
	ЗаполнитьЗахватываемыеПодсистемы(ДеревоПодсистем.Строки, УзлыЗахватываемыхПодсистем); 
	ОбработатьЗахватываемыеПодсистемы(Запись, УзлыЗахватываемыхПодсистем);	
	
	СоставЗахватаОбъектов = Новый Соответствие;
	ЗаполнитьСоставЗахватаОбъектов(УзлыЗахватываемыхПодсистем, СоставЗахватаОбъектов);
	ОбработатьЗахватываемыеОбъектыСоставаПодсистем(Запись, СоставЗахватаОбъектов);	
	
	Запись.ЗаписатьКонецЭлемента(); // Objects
	
	НастройкиЗахватаОбъектов = Запись.Закрыть();
	
КонецПроцедуры   

Процедура ЗаполнитьЗахватываемыеПодсистемы(СтрокиДерева, МассивУзлов)
	
	#Если Сервер И Не Сервер Тогда // Фейк для автокомплита
		МассивУзлов = Новый Массив;
		СтрокиДерева = ДеревоПодсистем.Строки;
	#КонецЕсли // Конец фейковой директивы
	
	Для Каждого Узел Из СтрокиДерева Цикл
		Если Узел.Захват Тогда 
			МассивУзлов.Добавить(Узел);
		КонецЕсли;
		ЗаполнитьЗахватываемыеПодсистемы(Узел.Строки, МассивУзлов);
	КонецЦикла;
	
КонецПроцедуры  

Процедура ОбработатьЗахватываемыеПодсистемы(ЗаписьXML, МассивУзлов)
	
	#Если Сервер И Не Сервер Тогда // Фейк для автокомплита
		ЗаписьXML = Новый ЗаписьXML;
		МассивУзлов = Новый Массив;
	#КонецЕсли // Конец фейковой директивы
	
	Для Каждого Узел Из МассивУзлов Цикл
		
		Если Узел.РежимЗахвата=2 Тогда // Пропускаем, где требуется только захват объектов
			Продолжить;
		КонецЕсли;

		ЗаписьXML.ЗаписатьНачалоЭлемента("Object");
		ЗаписьXML.ЗаписатьАтрибут("fullName", Узел.ПолноеИмя);
		ЗаписьXML.ЗаписатьАтрибут("includeChildObjects", "false");
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
	КонецЦикла;
	
КонецПроцедуры    

Процедура ЗаполнитьСоставЗахватаОбъектов(УзлыЗахватываемыхПодсистем, СоставЗахватаОбъектов)
	
	ЗахватВРасширении = Не ПустаяСтрока(ИмяРасширения);
	Для Каждого Узел Из УзлыЗахватываемыхПодсистем Цикл    
		Если Узел.РежимЗахвата=1 Тогда
			Продолжить;
		КонецЕсли;
		МетаданныеПодсистемы = Метаданные.НайтиПоПолномуИмени(Узел.ПолноеИмя);
		Для Каждого ЭлементСостава Из МетаданныеПодсистемы.Состав Цикл
			РасширениеОбъекта = ЭлементСостава.РасширениеКонфигурации();
			Если ЗахватВРасширении Тогда
				// Пока пусто
			Иначе     
				Если РасширениеОбъекта<>Неопределено Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			СоставЗахватаОбъектов.Вставить(ЭлементСостава);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры  

Процедура ОбработатьЗахватываемыеОбъектыСоставаПодсистем(ЗаписьXML, СоставЗахватаОбъектов)    
	
	#Если Сервер И Не Сервер Тогда // Фейк для автокомплита
		СоставЗахватаОбъектов = Новый Соответствие;
		ЗаписьXML = Новый ЗаписьXML;
	#КонецЕсли // Конец фейковой директивы
	
	Для Каждого ЭлементСостава Из СоставЗахватаОбъектов Цикл 
		ЗаписьXML.ЗаписатьНачалоЭлемента("Object");
		ЗаписьXML.ЗаписатьАтрибут("fullName", ЭлементСостава.Ключ.ПолноеИмя());
		ЗаписьXML.ЗаписатьАтрибут("includeChildObjects", "true");
		ЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЦикла;
	
КонецПроцедуры

Процедура СконструироватьСтрокуЗапуска()
	
	ЧастиСтроки = Новый Массив;
	
	ЧастиСтроки.Добавить(Закавычкать(КаталогПрограммы + "1CV8.EXE"));
	ЧастиСтроки.Добавить("DESIGNER");

	ЧастиСтроки.Добавить("/IBConnectionString");
	ЧастиСтроки.Добавить(СтрокаПодключенияИБ);
	
	Если WindowsАутентификацияИБ Тогда 
		ЧастиСтроки.Добавить("/WA+");
	Иначе   
		ЧастиСтроки.Добавить("/WA-");
		Если Не ПустаяСтрока(ИмяПользователяИБ) Тогда 
			ЧастиСтроки.Добавить("/N");
			ЧастиСтроки.Добавить(Закавычкать(ИмяПользователяИБ));
		КонецЕсли;
		Если Не ПустаяСтрока(ПарольИБ) Тогда 
			ЧастиСтроки.Добавить("/P");
			ЧастиСтроки.Добавить(Закавычкать(ПарольИБ));
		КонецЕсли;
	КонецЕсли;
	
	ЧастиСтроки.Добавить("/ConfigurationRepositoryF");
	ЧастиСтроки.Добавить(Закавычкать(ПутьКХранилищу));
	ЧастиСтроки.Добавить("/ConfigurationRepositoryN");
	ЧастиСтроки.Добавить(Закавычкать(ИмяПользователяХранилища));
	ЧастиСтроки.Добавить("/ConfigurationRepositoryP");
	ЧастиСтроки.Добавить(Закавычкать(ПарольХранилища)); 
	
	ЧастиСтроки.Добавить("/ConfigurationRepositoryLock");
	Если Не ПустаяСтрока(ИмяРасширения) Тогда 
		ЧастиСтроки.Добавить("-Extension");
		ЧастиСтроки.Добавить(ИмяРасширения); 
	КонецЕсли;
	
	ЧастиСтроки.Добавить("-objects");
	ЧастиСтроки.Добавить(Закавычкать(ИмяФайлаНастроекЗахвата)); 
	
	СтрокаЗапуска = СтрСоединить(ЧастиСтроки, " ");
	
КонецПроцедуры  

Функция Закавычкать(Текст, ТолькоОбрамитьАпострофами = Ложь)   
	
	Если ТолькоОбрамитьАпострофами Тогда 
		Результат = "'" + Текст + "'";
	Иначе 
		Результат = """" + СтрЗаменить(Текст, """", """""") + """";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти  // СлужебныеПроцедурыИФункции

#Область Инициализация

ПриИнициализацииОбъекта();

#КонецОбласти // Инициализация

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли